using UnityEngine;
using System.Collections;
using System.Xml;
using System.IO;

public class XMLManager : MonoBehaviour {

	//Use this class to specify code to READ and WRITE XML files

    private static void writeResolutionToXML(string width, string height)
    {
        XmlWriterSettings settings = new XmlWriterSettings();
        settings.Indent = true;

        XmlWriter writer = XmlWriter.Create((Application.persistentDataPath + "/settings.xml"), settings);
        writer.WriteStartDocument();
        writer.WriteComment("Automatically Generated by Rekt Ride App...");
        writer.WriteStartElement("Resolution");
        writer.WriteElementString("width", width);
        writer.WriteElementString("height", height);
        writer.WriteEndElement();
        writer.WriteEndDocument();

        writer.Flush();
        writer.Close();
    }

    public static Vector2 readResolutionFromXML() 
    {
        int xValue=0;
        int yValue=0;

        if (File.Exists(Application.persistentDataPath + "/settings.xml"))
        {
            //File Exists... Read settings from file
            XmlReader reader = XmlReader.Create(Application.persistentDataPath + "/settings.xml");
            while (reader.Read())
            {
                if (reader.Name == "Resolution")
                {
                    while (reader.NodeType != XmlNodeType.EndElement)
                    {
                        reader.Read();
                        if (reader.Name == "width")
                        {
                            while (reader.NodeType != XmlNodeType.EndElement)
                            {
                                reader.Read();
                                if (reader.NodeType == XmlNodeType.Text)
                                {
                                    xValue = System.Int32.Parse(reader.Value);
                                }
                            }
                            reader.Read();
                        } //end if

                        if (reader.Name == "height")
                        {
                            while (reader.NodeType != XmlNodeType.EndElement)
                            {
                                reader.Read();
                                if (reader.NodeType == XmlNodeType.Text)
                                {
                                    yValue = System.Int32.Parse(reader.Value);
                                }
                            }
                        }
                    }
                }
            }

        }
        else
        {
            xValue = 0;
            yValue = 0;
        }

        Vector2 returnVal = new Vector2(xValue, yValue);
        return returnVal;

    }
}
